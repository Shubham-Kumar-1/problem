#!/bin/python3

import math
import os
import random
import re
import sys

#
# Complete the 'cavityMap' function below.
#
# The function is expected to return a STRING_ARRAY.
# The function accepts STRING_ARRAY grid as parameter.
#

def cavityMap(grid):
    # Write your code here
    ans=[[0 for _ in range(n)] for _ in range(n)]
    for i in range(1,n-1):
        for j in range(1,n-1):
            mat=[int(grid[i][j+1]),int(grid[i-1][j]),int(grid[i+1][j]),int(grid[i][j-1])]
            if int(grid[i][j])>max(mat):
                ans[i][j]='X'
    for k in range(n):
        for l in range(n):
            if ans[k][l]=='X':
                pass
            else:
                ans[k][l]=grid[k][l]
    res=[]
    for row in ans:
        res.append(''.join(map(str,row)))
    return res

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    grid = []

    for _ in range(n):
        grid_item = input()
        grid.append(grid_item)

    result = cavityMap(grid)

    fptr.write('\n'.join(result))
    fptr.write('\n')

    fptr.close()
